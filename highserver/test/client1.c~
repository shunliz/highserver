#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<sys/socket.h>
#include<sys/stat.h>
#include<arpa/inet.h>
#include "../log.h"
#include "../Locker.h"
#define MAXBUF 1024

void* thread_func(void* arg){
   int ssock;
   int clen;
   struct sockaddr_in server_addr;
   char buf[MAXBUF];
   Logger* log = NULL;
   Locker* locker = locker_pthread_create();
   log = create_log("log.log",locker,6);
   
   if((ssock=socket(PF_INET,SOCK_STREAM,IPPROTO_TCP))<0){
   log->error(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "create simple sockstream error.");
   exit(1);
   }
   clen = sizeof(server_addr);
   memset(&server_addr,0,sizeof(server_addr));
   server_addr.sin_family     =AF_INET;
   server_addr.sin_addr.s_addr=inet_addr("192.168.0.10");
   server_addr.sin_port       =htons(3389);
   
   log->debug(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "connecting to the server.............");
   
   if(connect(ssock,(struct sockaddr *)&server_addr,clen)<0){
   log->error(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "connect to server error.");
   exit(1);
   }
   
   log->debug(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "connected to the server!!!!!!!!!!!!!!!");
   
   memset(buf,0,MAXBUF);
   
   if(read(ssock,buf,MAXBUF)<=0)
   {
      log->error(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "read from socket error.");
      exit(1);
   }
   log->debug(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "read:%s ",buf);
   //printf("\nread: %s\n",buf);
   sleep(2000);
   close(ssock);
   
   log->debug(log,
		 __FILE__,
	         __LINE__,
	         __FUNCTION__,
	         "client %dth work done.",*((int*)arg));
}

int main()
{
   int i;
   pthread_t thread;  
   for(i=0; i<10; i++){
   	
   	pthread_create(&thread, NULL, thread_func, (void *)( &i )); 
   }
   
   
   return 0;
}

